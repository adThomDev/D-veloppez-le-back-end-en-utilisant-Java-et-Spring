
#indique l'emplacement de la base de données :
#spring.datasource.url=jdbc:mysql://localhost:3306/ocr_p3
spring.datasource.url=jdbc:mysql://localhost:3306/ocr_p3?createDatabaseIfNotExist=true
#au dessus : pour créer automatiquement la BDD si elle n'existe pas.

#port de l'application (nb : par défaut : 8080. Donc adresse : http://localhost:8080/) :
server.port = 3001

#indique le driver à utiliser pour le sgbd :
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#sécurisation de la bdd par identifiant et mot de passe :
spring.datasource.username=root
spring.datasource.password=
#indique le mode type de modifications de la base de données :
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=create-drop

#image.upload.dir=pictures
spring.resources.static-locations=classpath:/static/,file:pictures
spring.mvc.static-path-pattern=/pictures/**
#image.upload.dir=/images
#spring.web.resources.static-locations=classpath:/static/

#TODO réessayer
#pour créer des json web token :
#The secret key must be an HMAC hash string of 256 bits; otherwise, the token generation will throw an error. I used this website to generate one :
# https://www.devglan.com/online-tools/hmac-sha256-online?ref=blog.tericcabrel.com
#security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
# nb : cette key ne marche pas

jwt.secret.key=aLongSecretStringWhoseBitnessIsEqualToOrGreaterThanTheBitnessOfTheTokenEncryptionAlgorithm
#temps de vie en ms (nb : 1 200 000ms = 20min) :
jwt.expiration=5200000
#TODO réduire le temps, après dev



#permet de voir les requêtes sql dans la console :
spring.jpa.show-sql=false
#embelli leur mise en forme :
spring.jpa.properties.hibernate.format_sql=true

#Si erreur et msg "To display the condition evaluation report re-run your application with 'debug' enabled" :
#debug=true
